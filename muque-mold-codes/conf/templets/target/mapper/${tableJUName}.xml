<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="${tableJUName}">

	<resultMap id="RM_${tableJUName}" type="${packageName}.dto.${tableJUName}">
		${xml.loop.frag2}
	</resultMap>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="${PKJName}">
		INSERT INTO ${tableName}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			${xml.loop.frag3}
		</trim>
		<trim prefix="VALUES (" suffix=")" suffixOverrides=",">
			${xml.loop.frag4}
		</trim>
		<!-- oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL -->
		<!-- DB2: order="BEFORE"" values nextval for sequenceName -->
		<!-- <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId"> 
			SELECT sequenceName.nextval AS ID FROM DUAL </selectKey> -->
	</insert>

	<update id="update">
		UPDATE ${tableName}
		<set>
			${xml.loop.frag5}
		</set>
		WHERE ${PK} = #{${PKJName}}
	</update>

	<delete id="delete">
		DELETE FROM ${tableName} WHERE ${PK} = #{${PKJName}}
	</delete>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
		${xml.loop.frag1}
	</sql>

	<select id="getByPK" resultMap="RM_${tableJUName}">
		SELECT
		<include refid="columns" />
		FROM ${tableName}
		WHERE ${PK} = #{${PKJName}}
	</select>

	<sql id="findByCondition_where">
		<where>
			${xml.loop.frag6}
		</where>
	</sql>
	<select id="countByCondition" resultType="int">
		SELECT count(1) FROM ${tableName}
		<include refid="findByCondition_where" />
	</select>
	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findByCondition" resultMap="RM_${tableJUName}">
		SELECT
		<include refid="columns" />
		FROM ${tableName}
		<include refid="findByCondition_where" />
	</select>
</mapper>

